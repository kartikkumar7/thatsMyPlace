/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.CustomerSupportRole;

import Business.Employee.Employee;
import Business.Enterprise.FacilityEnterprise;
import Business.Role.MaintanenceRole;
import Business.ThatsMyPlaceSystem;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Component;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author bochao
 */
public class UpdateMaintenanceEmployeeJPanel extends javax.swing.JPanel {
    
    private JPanel rightPanel;
    private UserAccount userAccount;
    private FacilityEnterprise facilityEnterprise;
    private ThatsMyPlaceSystem business;

    /**
     * Creates new form RemoveMaintenanceEmployeeJPanel
     */
    
    
    public UpdateMaintenanceEmployeeJPanel(JPanel rightPanel, UserAccount userAccount, ThatsMyPlaceSystem business) {
        initComponents();
        this.rightPanel = rightPanel;
        this.userAccount = userAccount;
        this.business = business;

        
        if (userAccount == null) {
            // add new employee
            
            txtEmployeeName.setEnabled(true);
            txtEmployeeName.setText("");
            txtUsername.setEnabled(true);
            txtUsername.setText("");
            txtPassword.setEnabled(true);
            txtPassword.setText("");
        }
        else {//update view
            populate();
        }
        
        
    }
    
    
    private void populate() {
        btnConfirm.setEnabled(true);
        
        txtEmployeeName.setText(userAccount.getEmployee().getName());
        txtUsername.setText(userAccount.getUsername());
        txtPassword.setEchoChar('*');
        
        txtEmployeeName.setEnabled(true);
        txtUsername.setEnabled(true);
        txtPassword.setEnabled(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblEmployeeDetails = new javax.swing.JLabel();
        lblEmployeeName = new javax.swing.JLabel();
        txtEmployeeName = new javax.swing.JTextField();
        lblUsername = new javax.swing.JLabel();
        lblPassowrd = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        txtPassword = new javax.swing.JPasswordField();
        btnConfirm = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(1000, 700));

        lblEmployeeDetails.setBackground(new java.awt.Color(255, 255, 255));
        lblEmployeeDetails.setFont(new java.awt.Font("Verdana", 1, 36)); // NOI18N
        lblEmployeeDetails.setForeground(new java.awt.Color(45, 118, 232));
        lblEmployeeDetails.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblEmployeeDetails.setText("Employee Details");

        lblEmployeeName.setBackground(new java.awt.Color(255, 255, 255));
        lblEmployeeName.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        lblEmployeeName.setForeground(new java.awt.Color(45, 118, 232));
        lblEmployeeName.setText("Name:");

        txtEmployeeName.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        txtEmployeeName.setForeground(new java.awt.Color(45, 118, 232));

        lblUsername.setBackground(new java.awt.Color(255, 255, 255));
        lblUsername.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        lblUsername.setForeground(new java.awt.Color(45, 118, 232));
        lblUsername.setText("Username:");

        lblPassowrd.setBackground(new java.awt.Color(255, 255, 255));
        lblPassowrd.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        lblPassowrd.setForeground(new java.awt.Color(45, 118, 232));
        lblPassowrd.setText("Password:");

        txtUsername.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        txtUsername.setForeground(new java.awt.Color(45, 118, 232));

        txtPassword.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        txtPassword.setForeground(new java.awt.Color(45, 118, 232));

        btnConfirm.setBackground(new java.awt.Color(255, 255, 255));
        btnConfirm.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        btnConfirm.setForeground(new java.awt.Color(45, 118, 232));
        btnConfirm.setText("Confirm");
        btnConfirm.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(45, 118, 232)));
        btnConfirm.setContentAreaFilled(false);
        btnConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmActionPerformed(evt);
            }
        });

        btnBack.setBackground(new java.awt.Color(255, 255, 255));
        btnBack.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        btnBack.setForeground(new java.awt.Color(45, 118, 232));
        btnBack.setText("Back");
        btnBack.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(45, 118, 232)));
        btnBack.setContentAreaFilled(false);
        btnBack.setPreferredSize(new java.awt.Dimension(100, 40));
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblEmployeeDetails, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(245, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblUsername)
                    .addComponent(lblPassowrd, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblEmployeeName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(179, 179, 179)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtEmployeeName)
                    .addComponent(txtUsername)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(281, 281, 281))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(404, 404, 404)
                        .addComponent(btnConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(lblEmployeeDetails)
                .addGap(107, 107, 107)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEmployeeName)
                    .addComponent(txtEmployeeName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(70, 70, 70)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUsername)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(66, 66, 66)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPassowrd)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 130, Short.MAX_VALUE)
                .addComponent(btnConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmActionPerformed

        String employeeName = txtEmployeeName.getText();
        String password = String.valueOf(txtPassword.getPassword());
        String userName = txtUsername.getText();
   
        if(employeeName.isEmpty()||employeeName.equalsIgnoreCase("")){
            JOptionPane.showMessageDialog(null, "Employee Name cannot be empty! Enter a name!");
            txtEmployeeName.setBorder(BorderFactory.createLineBorder(Color.RED));
            lblEmployeeName.setForeground(Color.RED);
            return;
        }
        
        if(userName.isEmpty()||userName.equalsIgnoreCase("")){
            JOptionPane.showMessageDialog(null, "Username cannot be empty! Enter a username!");
            txtUsername.setBorder(BorderFactory.createLineBorder(Color.RED));
            lblUsername.setForeground(Color.RED);
            return;
        }
        if(password.isEmpty()||password.equalsIgnoreCase("")){
            JOptionPane.showMessageDialog(null, "Password cannot be empty! Enter a password!");
            txtPassword.setBorder(BorderFactory.createLineBorder(Color.RED));
            lblPassowrd.setForeground(Color.RED);
            return;
        }
        
        if (userAccount == null) {
            
            for(UserAccount ua: business.getUserAccountDirectory().getUserAccounts()){
                if(ua.getEmployee().getName().equalsIgnoreCase(employeeName)){
                    JOptionPane.showMessageDialog(null, "Employee Name exists! Enter a new unique name!");
                    txtEmployeeName.setBorder(BorderFactory.createLineBorder(Color.RED));
                    lblEmployeeName.setForeground(Color.RED);
                    return;
                }
                if(ua.getUsername().equalsIgnoreCase(userName)){
                    JOptionPane.showMessageDialog(null, "Username exists! Enter a new unique username!");
                    txtUsername.setBorder(BorderFactory.createLineBorder(Color.RED));
                    lblUsername.setForeground(Color.RED);
                    return;
                }
                
            }
            Employee newEmployee = business.getEmployeeDirectory().createEmployee(employeeName);
            MaintanenceRole role = new MaintanenceRole();
            business.getUserAccountDirectory().createUserAccount(userName, password, newEmployee, role);
        }
        else {
            for(UserAccount ua: business.getUserAccountDirectory().getUserAccounts()){
                if(ua.getEmployee().equals(userAccount.getEmployee())){
                continue;
                }
                if(ua.getEmployee().getName().equalsIgnoreCase(employeeName)){
                    JOptionPane.showMessageDialog(null, "Employee Name exists! Enter a new unique name!");
                    txtEmployeeName.setBorder(BorderFactory.createLineBorder(Color.RED));
                    lblEmployeeName.setForeground(Color.RED);
                    return;
                }
                if(ua.getUsername().equalsIgnoreCase(userName)){
                    JOptionPane.showMessageDialog(null, "Username exists! Enter a new unique username!");
                    txtUsername.setBorder(BorderFactory.createLineBorder(Color.RED));
                    lblUsername.setForeground(Color.RED);
                    return;
                }

            }
            userAccount.setUsername(userName);
            userAccount.setPassword(password);
            userAccount.getEmployee().setName(employeeName);
 
        }
        
        
        btnConfirm.setEnabled(false);
        JOptionPane.showMessageDialog(null, "Action Successfully Completed!");
        txtEmployeeName.setEnabled(false);
        txtUsername.setEnabled(false);
        txtPassword.setEnabled(false);

        txtEmployeeName.setBorder(BorderFactory.createLineBorder(new Color(45,118,232)));
        lblEmployeeName.setForeground(new Color(45,118,232));
        txtUsername.setBorder(BorderFactory.createLineBorder(new Color(45,118,232)));
        lblUsername.setForeground(new Color(45,118,232));
        txtPassword.setBorder(BorderFactory.createLineBorder(new Color(45,118,232)));
        lblPassowrd.setForeground(new Color(45,118,232));

        
        btnConfirm.setEnabled(false);
    }//GEN-LAST:event_btnConfirmActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed

        rightPanel.remove(this);
        CardLayout layout = (CardLayout) rightPanel.getLayout();
        Component[] comps = this.rightPanel.getComponents();
        for (Component comp : comps) {
            if (comp instanceof ManageMaintenanceEmployeeJPanel) {
                ManageMaintenanceEmployeeJPanel panel = (ManageMaintenanceEmployeeJPanel) comp;
                panel.populate();
            }
        }
        layout.previous(rightPanel);

    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnConfirm;
    private javax.swing.JLabel lblEmployeeDetails;
    private javax.swing.JLabel lblEmployeeName;
    private javax.swing.JLabel lblPassowrd;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JTextField txtEmployeeName;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
