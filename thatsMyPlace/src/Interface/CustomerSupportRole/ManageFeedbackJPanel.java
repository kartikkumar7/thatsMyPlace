package Interface.CustomerSupportRole;

import Business.EmailUtil.EmailUtil;
import Business.Enterprise.FacilityEnterprise;
import Business.Organization.MaintanceOrganization;
import Business.Organization.Organization;
import Business.Role.Role;
import Business.Student.Student;
import Business.ThatsMyPlaceSystem;
import Business.WorkQueue.FeedbackWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.ArrayList;
import java.util.List;
import java.util.TimerTask;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Karti
 * @author bochao
 */
public class ManageFeedbackJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageFeedbackJPanel
     */
    
    private JPanel rightPanel;
    private FacilityEnterprise facilityEnterprise;
    private ThatsMyPlaceSystem thatsMyPlaceSystem;
    private List<FeedbackWorkRequest> feedbackWorkRequestsList;
    
    public ManageFeedbackJPanel(JPanel rightPanel, FacilityEnterprise facilityEnterprise, ThatsMyPlaceSystem thatsMyPlaceSystem) {
        initComponents();
        this.rightPanel=rightPanel;
        this.facilityEnterprise = facilityEnterprise;
        this.thatsMyPlaceSystem = thatsMyPlaceSystem;
        feedbackWorkRequestsList = new ArrayList<>();
        populate();
    }
    
    private void populate(){
        feedbackWorkRequestsList.removeAll(feedbackWorkRequestsList);
        
        List<WorkRequest> list = facilityEnterprise.getWorkQueue().getWorkRequestList();
        DefaultTableModel dtm = (DefaultTableModel)feedbackList.getModel();
        dtm.setRowCount(0);
        
        for(WorkRequest wr : list){
            if(wr.getType().toString().equals("Feedback Response")){
                feedbackWorkRequestsList.add((FeedbackWorkRequest)wr);
            }
            if(wr.getType().equals(FeedbackWorkRequest.Type.FeedbackToMaintanence)){
                feedbackWorkRequestsList.add((FeedbackWorkRequest)wr);
            }
        }
        
        for(FeedbackWorkRequest fwr : feedbackWorkRequestsList){
            Object[] row = new Object[dtm.getColumnCount()];
            row[0] = fwr;
            row[1] = fwr.getSender().getUsername();
            row[2] = fwr.getType();
            row[3] = fwr.getRating();
            row[4] = fwr.getStatus();
            row[5] = fwr.getMessage();
            dtm.addRow(row); 
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        feedbackList = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btnSendMaintenance = new javax.swing.JButton();
        btnThankYou = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(1000, 700));

        jScrollPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(45, 118, 232)));

        feedbackList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "RequestId", "User Name", "Feedback Type", "Feedback Rating", "Status", "Message"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(feedbackList);

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(45, 118, 232));
        jLabel1.setText("Customer Feedback List");

        btnSendMaintenance.setBackground(new java.awt.Color(255, 255, 255));
        btnSendMaintenance.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        btnSendMaintenance.setForeground(new java.awt.Color(45, 118, 232));
        btnSendMaintenance.setText("Send to Maintenance Team");
        btnSendMaintenance.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(45, 118, 232)));
        btnSendMaintenance.setContentAreaFilled(false);
        btnSendMaintenance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendMaintenanceActionPerformed(evt);
            }
        });

        btnThankYou.setBackground(new java.awt.Color(255, 255, 255));
        btnThankYou.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        btnThankYou.setForeground(new java.awt.Color(45, 118, 232));
        btnThankYou.setText("Mark Read & Send Thank You");
        btnThankYou.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(45, 118, 232)));
        btnThankYou.setContentAreaFilled(false);
        btnThankYou.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThankYouActionPerformed(evt);
            }
        });

        btnBack.setBackground(new java.awt.Color(255, 255, 255));
        btnBack.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        btnBack.setForeground(new java.awt.Color(45, 118, 232));
        btnBack.setText("Back");
        btnBack.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(45, 118, 232)));
        btnBack.setContentAreaFilled(false);
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(99, 99, 99)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnSendMaintenance, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(29, 29, 29)
                                .addComponent(btnThankYou, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 377, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 804, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(97, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSendMaintenance, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnThankYou, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        rightPanel.remove(this);
        CardLayout layout = (CardLayout)rightPanel.getLayout();
        layout.previous(rightPanel);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnSendMaintenanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendMaintenanceActionPerformed
        int selectedRow = feedbackList.getSelectedRow();
        if(selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select any row", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        int selectionButton = JOptionPane.YES_NO_OPTION;
        int selectionResult = JOptionPane.showConfirmDialog(null, "Are You Sure To Send?", "Warning", selectionButton);
        if(selectionResult == JOptionPane.YES_OPTION) {
            
            MaintanceOrganization maintanceOrganization = null;
            for (Organization o: facilityEnterprise.getOrganizationDirectory().getOrganizationList()) {
                if (o.getRole().equals(Role.RoleType.Maintanence)) {
                    maintanceOrganization = (MaintanceOrganization) o;
                    break;
                }
            }

            FeedbackWorkRequest feedback = (FeedbackWorkRequest) feedbackList.getValueAt(selectedRow, 0);

            if(feedback.getType().equals(WorkRequest.Type.FeedbackToMaintanence)){
                JOptionPane.showMessageDialog(null, "You already have sent it!", "Warning", JOptionPane.WARNING_MESSAGE);
                return;
            }
            else{
                feedback.setType(WorkRequest.Type.FeedbackToMaintanence);
                feedback.setStatus(WorkRequest.Status.Pending);

                maintanceOrganization.getWorkQueue().getWorkRequestList().add(feedback);

                // Re-populate the table with "Solved" mark
                populate();
            }
        }
    }//GEN-LAST:event_btnSendMaintenanceActionPerformed

    private void btnThankYouActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThankYouActionPerformed
        int selectedRow = feedbackList.getSelectedRow();
        if (selectedRow >= 0) {
            FeedbackWorkRequest feedback = (FeedbackWorkRequest) feedbackList.getValueAt(selectedRow, 0);
            
            if (feedback.getStatus().equals(WorkRequest.Status.Solved)) {
                JOptionPane.showMessageDialog(null, "This request is already been solved!", "Warning", JOptionPane.WARNING_MESSAGE);
                return;
            }
            
            // customer support makes it solved
            feedback.setStatus(WorkRequest.Status.Solved);
            populate();
            
            Student student = (Student) feedback.getSender().getEmployee();
            String email = student.getEmail();
            
            new java.util.Timer().schedule(new TimerTask() {
                @Override
                public void run() {
                    System.out.println("Email Sending ... Thank you email ...");
                    EmailUtil.GmailSender(
                            email, 
                            "Thank you from ThatsMyPlace!", 
                            "We truly thank you for giving the feedback, your feedback will help us improve our work!"
                    );
                }
            }, 200);
        }
        else {
            JOptionPane.showMessageDialog(null, "Please select a row");
        }
    }//GEN-LAST:event_btnThankYouActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSendMaintenance;
    private javax.swing.JButton btnThankYou;
    private javax.swing.JTable feedbackList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
